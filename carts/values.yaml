# Default values for carts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namemq: rabbitmq

secret:
  namedb: cart-db-secret
  name: cart-secret
  namemq: rabbitmq-secret
  type: Opaque
  datamq:
    RABBITMQ_DEFAULT_PASS: "cmFiaXRfcGFzc3dvcmQ="  # Base64-encoded password (e.g., "rabbit_password")
  datadb:
    AWS_SECRET_ACCESS_KEY: "WnlmczZhWW5JellGT3RFc3Q1TFZhb2hvdlhuZWo2RVd1eFVoK0daOQ=="
    AWS_ACCESS_KEY_ID: "QUtJQVRQQzRRVUVXT0c0VklWQzQ="
    SPRING_DATASOURCE_WRITER_USERNAME: "b3JkZXJzX3VzZXI="
    SPRING_DATASOURCE_WRITER_PASSWORD: "b3JkZXJzX3Bhc3M="
    SPRING_DATASOURCE_READER_USERNAME: "b3JkZXJzX3VzZXI="
    SPRING_DATASOURCE_READER_PASSWORD: "b3JkZXJzX3Bhc3M="
  data:
    AWS_SECRET_ACCESS_KEY: "WnlmczZhWW5JellGT3RFc3Q1TFZhb2hvdlhuZWo2RVd1eFVoK0daOQ=="
    AWS_ACCESS_KEY_ID: "QUtJQVRQQzRRVUVXT0c0VklWQzQ="

configmap:
  namedb: cart-db-config
  name: cart-config
  namemq: rabbitmq-config
  datamq:
    RABBITMQ_DEFAULT_USER: "rabbit_user"         # RabbitMQ default user
    RABBITMQ_DEFAULT_VHOST: "/"                  # RabbitMQ default virtual host
  datadb:
    JAVA_OPTS: "-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom"
    SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
    SPRING_PROFILES_ACTIVE: "dynamodb,mysql,rabbitmq"
    SPRING_DATASOURCE_WRITER_URL: jdbc:postgresql://orders-db:3306/orders
    SPRING_DATASOURCE_READER_URL: jdbc:postgresql://orders-db:5432/orders
    SPRING_RABBITMQ_HOST: "rabbitmq"
    REGION: "us-east-1"
    DYNAMODB_CREATE_TABLE: "true"
  data:
    JAVA_OPTS: "-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom"
    #SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
    #SPRING_PROFILES_ACTIVE: "dynamodb"
    CARTS_DYNAMODB_ENDPOINT: "http://carts-db:8000"
    CARTS_DYNAMODB_CREATETABLE: "true"

replicaCount: 1

image:
  repository: arsenet10/revive-cart
  repositorymq: arsenet10/revive-orders
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: carts-53
  tagdb: carts-dynamodb-53
  tagmq: "rabbit-mq-01"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "cart-service-account"
  namedb: "cart-db-service-account"
  namemq: "rabbitmq-service-account"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  portdb: 8000
  portmq1: 5672
  portmq2: 15672

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 200m
    memory: 128Mi

resourcesmq:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "200m"
    memory: "256Mi"

autoscaling:
  enabled: true
  enabledb: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

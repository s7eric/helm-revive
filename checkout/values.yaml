# Default values for checkout.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

secret:
  namedb: checkout-db-secret
  type: Opaque
  datadb: 
    REDIS_PASSWORD: "cGFzc3dvcmQ="       # Base64-encoded password (e.g., "password")

configmap:
  name: checkout-config
  namedb: checkout-db-config
  datadb:
    REDIS_HOST: "checkout-db"  # Redis hostname (matches StatefulSet service name)
    REDIS_PORT: "6379"                 # Redis port
  data:
    REDIS_URL: "redis://checkout-db:6379"
    ENDPOINTS_ORDERS: "http://orders:8080"

replicaCount: 1

image:
  repository: arsenet10/revive-checkout
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: checkout-12
  tagdb: checkout-db-12

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "checkout-service-account"
  namedb: "checkout-db-service-account"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  portdb: 6379

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 200m
    memory: 128Mi

autoscaling:
  enabled: true
  enabledb: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
